@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model ContractMonthlyClaimSystem.Models.Claim
@{
    ViewData["Title"] = "Review Claim";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Review Claim - @Model.Id</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <a href="@Url.Action("AllClaims", "Review")" class="btn btn-outline-secondary me-2">
            <i class="fas fa-arrow-left me-1"></i> Back to Claims
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title">Claim Details</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <p><strong>Claim ID:</strong> @Model.Id</p>
                        <p><strong>Lecturer:</strong> @Model.LecturerName</p>
                        <p><strong>Submitted:</strong> @Model.SubmittedDate.ToString("dd MMM yyyy")</p>
                    </div>
                    <div class="col-md-6">
                        <p><strong>Claim Month:</strong> @DateTime.Parse(Model.ClaimMonth + "-01").ToString("MMMM yyyy")</p>
                        <p>
                            <strong>Status:</strong>
                            <span class="status-badge status-@Model.Status.ToString().ToLower()">
                                @Model.Status
                            </span>
                        </p>
                        @if (Model.ReviewedDate.HasValue)
                        {
                            <p><strong>Reviewed:</strong> @Model.ReviewedDate.Value.ToString("dd MMM yyyy") by @Model.ReviewedBy</p>
                        }
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-md-4">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h5>@Model.HoursWorked</h5>
                                <small class="text-muted">Hours Worked</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <h5>R@(Model.HourlyRate.ToString("N2"))</h5>
                                <small class="text-muted">Hourly Rate</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card bg-primary text-white">
                            <div class="card-body text-center">
                                <h5>R@(Model.TotalAmount.ToString("N2"))</h5>
                                <small>Total Amount</small>
                            </div>
                        </div>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="mt-3">
                        <strong>Description:</strong>
                        <p class="mt-1">@Model.Description</p>
                    </div>
                }
            </div>
        </div>

        @if (Model.SupportingDocuments.Any())
        {
            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="card-title">Supporting Documents</h5>
                </div>
                <div class="card-body">
                    <div class="list-group">
                        @foreach (var document in Model.SupportingDocuments)
                        {
                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <i class="fas fa-file me-2"></i>
                                    @document.OriginalFileName
                                    <small class="text-muted ms-2">(@((document.FileSize / 1024 / 1024).ToString("0.00")) MB)</small>
                                </div>
                                <div>
                                    <a href="@Url.Action("View", "Documents", new { id = document.Id })" class="btn btn-sm btn-outline-info me-1">
                                        <i class="fas fa-eye"></i> View
                                    </a>
                                    <a href="@Url.Action("Download", "Documents", new { id = document.Id })" class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-download"></i> Download
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        @if (Model.Status == ContractMonthlyClaimSystem.Models.ClaimStatus.Submitted)
        {
            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="card-title">Review Actions</h5>
                </div>
                <div class="card-body">
                    <form method="post" id="reviewForm">
                        <div class="mb-3">
                            <label for="reviewComments" class="form-label">Review Comments *</label>
                            <textarea class="form-control" id="reviewComments" name="comments" rows="4" placeholder="Enter your comments for approval or rejection..." required></textarea>
                            <div class="form-text">Comments are required when rejecting a claim.</div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <button type="button" class="btn btn-danger me-md-2" onclick="rejectClaim()">
                                <i class="fas fa-times me-1"></i> Reject Claim
                            </button>
                            <button type="button" class="btn btn-success" onclick="approveClaim()">
                                <i class="fas fa-check me-1"></i> Approve Claim
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        }
        else if (!string.IsNullOrEmpty(Model.ReviewComments))
        {
            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="card-title">Review Comments</h5>
                </div>
                <div class="card-body">
                    <div class="alert @(Model.Status == ContractMonthlyClaimSystem.Models.ClaimStatus.Approved ? "alert-success" : "alert-danger")">
                        <strong>@Model.ReviewedBy</strong> - @Model.ReviewedDate?.ToString("dd MMM yyyy HH:mm")
                        <hr>
                        @Model.ReviewComments
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title">Quick Actions</h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a href="@Url.Action("AllClaims", "Review")" class="btn btn-outline-secondary mb-2">
                        <i class="fas fa-list me-2"></i> View All Claims
                    </a>
                    @if (Model.Status == ContractMonthlyClaimSystem.Models.ClaimStatus.Submitted)
                    {
                        <button class="btn btn-success mb-2" onclick="approveClaim()">
                            <i class="fas fa-check me-2"></i> Approve Claim
                        </button>
                        <button class="btn btn-danger mb-2" onclick="rejectClaim()">
                            <i class="fas fa-times me-2"></i> Reject Claim
                        </button>
                    }
                    <a href="#" class="btn btn-outline-primary" onclick="downloadClaim('@Model.Id')">
                        <i class="fas fa-download me-2"></i> Download PDF
                    </a>
                </div>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-header">
                <h5 class="card-title">Claim History</h5>
            </div>
            <div class="card-body">
                <div class="timeline">
                    <div class="timeline-item completed">
                        <div class="timeline-marker"></div>
                        <div class="timeline-content">
                            <h6>Draft Created</h6>
                            <small>@Model.SubmittedDate.ToString("dd MMM yyyy HH:mm")</small>
                        </div>
                    </div>
                    <div class="timeline-item completed">
                        <div class="timeline-marker"></div>
                        <div class="timeline-content">
                            <h6>Submitted for Review</h6>
                            <small>@Model.SubmittedDate.ToString("dd MMM yyyy HH:mm")</small>
                        </div>
                    </div>
                    @if (Model.Status == ContractMonthlyClaimSystem.Models.ClaimStatus.Approved || Model.Status == ContractMonthlyClaimSystem.Models.ClaimStatus.Rejected)
                    {
                        <div class="timeline-item completed">
                            <div class="timeline-marker"></div>
                            <div class="timeline-content">
                                <h6>@Model.Status by @Model.ReviewedBy</h6>
                                <small>@Model.ReviewedDate?.ToString("dd MMM yyyy HH:mm")</small>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function approveClaim() {
            const comments = document.getElementById('reviewComments').value;
            if (confirm('Are you sure you want to approve this claim?')) {
                const form = document.getElementById('reviewForm');
                form.action = '@Url.Action("Approve", "Review", new { id = Model.Id })';
                form.submit();
            }
        }

        function rejectClaim() {
            const comments = document.getElementById('reviewComments').value;
            if (!comments.trim()) {
                alert('Please provide comments when rejecting a claim.');
                return;
            }

            if (confirm('Are you sure you want to reject this claim?')) {
                const form = document.getElementById('reviewForm');
                form.action = '@Url.Action("Reject", "Review", new { id = Model.Id })';
                form.submit();
            }
        }

        function downloadClaim(claimId) {
            alert('Downloading PDF for claim ' + claimId);
        }
    </script>

    <style>
        .timeline {
            position: relative;
            padding-left: 30px;
        }

        .timeline-item {
            position: relative;
            margin-bottom: 20px;
        }

        .timeline-marker {
            position: absolute;
            left: -30px;
            top: 0;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background-color: #28a745;
            border: 3px solid white;
        }

        .timeline-content h6 {
            margin-bottom: 5px;
            font-weight: 600;
        }

        .timeline-content small {
            color: #6c757d;
        }
    </style>
}